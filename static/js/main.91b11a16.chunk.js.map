{"version":3,"sources":["home/Home.jsx","hooks/useApiAdapter.jsx","constant/stopStatus.js","busStopInfo/BusStopInfo.jsx","busStopInfo/calEstimatedTime.js","components/FlexBox.jsx","components/grid/Grid.jsx","constant/cityList.js","components/commonList/CommonList.jsx","searchBusPage/SearchBusPage.jsx","stationNearby/StationNearby.jsx","stationBusList/StationBusList.jsx","utils/initAxios.js","App.jsx","reportWebVitals.js","index.js"],"names":["Home","props","history","useHistory","onClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","push","pathname","search","console","error","useApiAdapter","defaultData","useState","isLoading","setIsLoading","data","setData","apiAdapter","useCallback","api","onSuccess","mapper","resp","then","catch","err","stopStatusMapper","BusStopInfo","getRouteInfo","routeInfo","getEstimatedTime","estimatedTime","queryString","parse","location","city","route","TabPane","Tabs","Step","Steps","useEffect","axios","get","encodeURIComponent","map","item","Stops","length","log","direction1","direction2","forEach","Direction","calBusStopInfo","status","time","Math","ceil","convertEstimatedInfo","arr","reduce","pre","cur","StopName","StopStatus","EstimateTime","Zh_tw","calEstimatedTime","spinning","slice","stops","id","tab","direction","stop","subId","title","description","FlexBox","flex","row","justify","aligm","style","wrap","gap","rest","display","flexGrow","justifyContent","alignItems","flexDirection","flexWrap","GridCol","span","maxWidth","GridRow","width","cityList","label","code","value","CommonList","bordered","renderItem","desc","Item","SearchBusPage","setSearch","setCity","showCitySelector","setShowCitySelector","appendToSearch","val","concat","keyboardItems","event","DepartureStopNameZh","DestinationStopNameZh","RouteName","onChange","e","target","dataSource","StationNearby","getNearbyStations","getPTBus","lat","long","useMemo","StationName","StationID","LocationCityCode","stationId","cityCode","stations","find","routes","join","StationBusList","initAxios","interceptors","request","use","config","GMTString","Date","toGMTString","ShaObj","jsSHA","setHMACKey","update","Authorization","getHMAC","headers","App","Router","path","component","to","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91b11a16.chunk.js","sourcesContent":["import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport { Button } from \"antd\";\nimport { useHistory } from \"react-router\";\n\nfunction Home(props) {\n  const history = useHistory();\n  return (\n    <div>\n      <Button\n        onClick={() => {\n          if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n              ({ coords: { latitude, longitude } }) => {\n                history.push({\n                  pathname: \"/nearby-stations\",\n                  search: `lat=${latitude}&long=${longitude}`,\n                });\n              }\n            );\n          } else {\n            console.error(\"Geolocation is not supported by this browser.\");\n          }\n        }}\n      >\n        附近公車站\n      </Button>\n      <Button onClick={() => history.push(\"/search-bus\")}>查詢公車</Button>\n    </div>\n  );\n}\n\nHome.propTypes = {};\n\nexport default Home;\n","import { useCallback, useState } from \"react\";\n\nexport default function useApiAdapter(defaultData) {\n  const [isLoading, setIsLoading] = useState();\n  const [data, setData] = useState(defaultData);\n\n  const apiAdapter = useCallback(\n    ({ api, onSuccess = () => {}, mapper = (resp) => resp.data }) => {\n      setIsLoading(true);\n      api\n        .then((resp) => {\n          const data = mapper ? mapper(resp) : resp;\n          setIsLoading(false);\n          setData(data);\n          onSuccess(data);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          console.error(err);\n        });\n    },\n    []\n  );\n\n  return { apiAdapter, data, isLoading };\n}\n","const stopStatusMapper = {\n  0: \"正常\",\n  1: \"尚未發車\",\n  2: \"交管不停靠\",\n  3: \"末班車已過\",\n  4: \"今日未營運\",\n};\n\nexport default stopStatusMapper;\n","import React, { useEffect } from \"react\";\n// import PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport useApiAdapter from \"../hooks/useApiAdapter\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport { Spin, Steps, Tabs } from \"antd\";\nimport calEstimatedTime from \"./calEstimatedTime\";\n\nfunction BusStopInfo(props) {\n  const {\n    apiAdapter: getRouteInfo,\n    isLoading,\n    data: routeInfo,\n  } = useApiAdapter([]);\n  const {\n    apiAdapter: getEstimatedTime,\n    isLoading: loadingETime,\n    data: estimatedTime,\n  } = useApiAdapter([\"\", \"\"]);\n  const history = useHistory();\n  const { city, route } = queryString.parse(history.location.search);\n  const { TabPane } = Tabs;\n  const { Step } = Steps;\n\n  useEffect(() => {\n    getRouteInfo({\n      api: axios.get(\n        `https://ptx.transportdata.tw/MOTC/v2/Bus/StopOfRoute/City/${city}/${encodeURIComponent(\n          route\n        )}`\n      ),\n      mapper: (resp) => resp.data.map((item) => item.Stops),\n      onSuccess: (data) => {\n        if (data.length !== 2) console.error(\"公車路線資訊不如預期\");\n      },\n    });\n  }, [getRouteInfo, city, route]);\n\n  useEffect(() => {\n    getEstimatedTime({\n      api: axios.get(\n        `https://ptx.transportdata.tw/MOTC/v2/Bus/EstimatedTimeOfArrival/City/${city}/${encodeURIComponent(\n          route\n        )}`\n      ),\n      mapper: (resp) => calEstimatedTime(resp.data),\n    });\n  }, [getEstimatedTime, city, route]);\n\n  return (\n    <Spin spinning={isLoading}>\n      <Tabs>\n        {/* TODO 預期routerInfo只有2個item 但有時後端提供的資料會超過2個 所以先取前兩個 */}\n        {routeInfo.slice(0, 2).map((stops, id) => {\n          return (\n            <TabPane\n              key={id}\n              tab={`往 ${stops[stops.length - 1].StopName.Zh_tw}`}\n            >\n              <Steps direction=\"vertical\">\n                {stops.map((stop, subId) => (\n                  <Step\n                    key={subId}\n                    title={stop.StopName.Zh_tw}\n                    description={\n                      estimatedTime[id][stop.StopName.Zh_tw] &&\n                      estimatedTime[id][stop.StopName.Zh_tw][0]\n                    }\n                  />\n                ))}\n              </Steps>\n            </TabPane>\n          );\n        })}\n      </Tabs>\n    </Spin>\n  );\n}\n\nBusStopInfo.propTypes = {};\n\nexport default BusStopInfo;\n","import stopStatusMapper from \"../constant/stopStatus\";\n\nexport default function calEstimatedTime(data = []) {\n  console.log(\"estimated info\", data);\n  const direction1 = [];\n  const direction2 = [];\n  data.forEach((item) => {\n    if (item.Direction === 0) {\n      direction1.push(item);\n    } else if (item.Direction === 1) {\n      direction2.push(item);\n    } else {\n      console.error(\"公車資訊的Direction不如預期\", item, item.Direction);\n    }\n  });\n\n  const calBusStopInfo = (status, estimatedTime) => {\n    if (status === 0) {\n      const time = Math.ceil(estimatedTime / 60);\n      return time ? `${time}分鐘` : \"即將進站\";\n    }\n    return stopStatusMapper[status];\n  };\n\n  const convertEstimatedInfo = (arr) =>\n    arr.reduce((pre, cur) => {\n      const { StopName, StopStatus, EstimateTime } = cur;\n      if (pre[StopName.Zh_tw]) {\n        pre[StopName.Zh_tw].push(calBusStopInfo(StopStatus, EstimateTime));\n      } else {\n        pre[StopName.Zh_tw] = [calBusStopInfo(StopStatus, EstimateTime)];\n      }\n      return pre;\n    }, {});\n\n  console.log(\"公車進站資訊\", [\n    convertEstimatedInfo(direction1),\n    convertEstimatedInfo(direction2),\n  ]);\n\n  return [convertEstimatedInfo(direction1), convertEstimatedInfo(direction2)];\n}\n","import React from \"react\";\n\nconst FlexBox = ({ flex, row, justify, aligm, style, wrap, gap, ...rest }) => {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexGrow: flex ? 1 : 0,\n        justifyContent: justify,\n        alignItems: aligm,\n        gap,\n        flexDirection: row ? \"row\" : \"column\",\n        flexWrap: wrap ? \"wrap\" : \"nowrap\",\n        ...style,\n      }}\n      {...rest}\n    />\n  );\n};\n\nexport default FlexBox;\n","import React from \"react\";\nimport FlexBox from \"../FlexBox\";\n\nexport const GridCol = ({ span = \"100\", ...rest }) => {\n  return (\n    <FlexBox\n      {...rest}\n      style={{\n        flex: `0 0 ${span}%`,\n        maxWidth: `${span}%`,\n      }}\n    />\n  );\n};\n\nexport const GridRow = (props) => {\n  return <FlexBox wrap {...props} style={{ width: \"100%\" }} />;\n};\n","const cityList = [\n  { label: \"臺北市\",code: 'TPE', value: \"Taipei\" },\n  { label: \"新北市\",code: 'NTPC', value: \"NewTaipei\" },\n  { label: \"桃園市\",code: 'TYN', value: \"Taoyuan\" },\n  { label: \"臺中市\",code: 'TXG', value: \"Taichung\" },\n  { label: \"臺南市\",code: 'TNN', value: \"Tainan\" },\n  { label: \"高雄市\",code: 'KHH', value: \"Kaohsiung\" },\n  { label: \"基隆市\",code: 'KEL', value: \"Keelung\" },\n  { label: \"新竹市\",code: 'HSZ', value: \"Hsinchu\" },\n  { label: \"新竹縣\",code: 'HSZ', value: \"HsinchuCounty\" },\n  { label: \"苗栗縣\",code: 'ZMI', value: \"MiaoliCounty\" },\n  { label: \"彰化縣\",code: 'CHW', value: \"ChanghuaCounty\" },\n  { label: \"南投縣\",code: 'NTC', value: \"NantouCounty\" },\n  { label: \"雲林縣\",code: 'YUN', value: \"YunlinCounty\" },\n  { label: \"嘉義縣\",code: 'CYI', value: \"ChiayiCounty\" },\n  { label: \"嘉義市\",code: 'CYI', value: \"Chiayi\" },\n  { label: \"屏東縣\",code: 'PIF', value: \"PingtungCounty\" },\n  { label: \"宜蘭縣\",code: 'ILA', value: \"YilanCounty\" },\n  { label: \"花蓮縣\",code: 'HUN', value: \"HualienCounty\" },\n  { label: \"臺東縣\",code: 'TTT', value: \"TaitungCounty\" },\n  { label: \"金門縣\",code: 'KNH', value: \"KinmenCounty\" },\n  { label: \"澎湖縣\",code: 'PEH', value: \"PenghuCounty\" },\n  { label: \"連江縣\",code: 'LNN', value: \"LienchiangCounty\" },\n];\n\nexport default cityList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"antd\";\nimport FlexBox from \"../FlexBox\";\n\nfunction CommonList(props) {\n  return (\n    <List\n      bordered\n      renderItem={({ onClick = () => {}, title, desc }) => (\n        <List.Item>\n          <FlexBox onClick={onClick}>\n            {title}\n            <FlexBox>{desc}</FlexBox>\n          </FlexBox>\n        </List.Item>\n      )}\n      {...props}\n    />\n  );\n}\n\nCommonList.propTypes = {};\n\nexport default CommonList;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Button, Input, List, Spin } from \"antd\";\nimport FlexBox from \"../components/FlexBox\";\nimport { GridCol, GridRow } from \"../components/grid/Grid\";\nimport useApiAdapter from \"../hooks/useApiAdapter\";\nimport axios from \"axios\";\nimport cityList from \"../constant/cityList\";\nimport { useHistory } from \"react-router\";\nimport CommonList from \"../components/commonList/CommonList\";\n// import PropTypes from 'prop-types'\n\nfunction SearchBusPage(props) {\n  const history = useHistory();\n  const [search, setSearch] = useState(\"\");\n  const [city, setCity] = useState(cityList[0]);\n  const [showCitySelector, setShowCitySelector] = useState(false);\n\n  const appendToSearch = useCallback(\n    (val) => setSearch(search.concat(val)),\n    [search, setSearch]\n  );\n\n  const keyboardItems = [\n    { event: () => setShowCitySelector(true), span: 60, label: city.label },\n    { event: () => appendToSearch(\"\"), span: 40, label: \"手動輸入\" },\n    { event: () => appendToSearch(\"紅\"), span: 20, label: \"紅\" },\n    { event: () => appendToSearch(\"藍\"), span: 20, label: \"籃\" },\n    { event: () => appendToSearch(\"1\"), span: 20, label: \"1\" },\n    { event: () => appendToSearch(\"2\"), span: 20, label: \"2\" },\n    { event: () => appendToSearch(\"3\"), span: 20, label: \"3\" },\n    { event: () => appendToSearch(\"綠\"), span: 20, label: \"綠\" },\n    { event: () => appendToSearch(\"棕\"), span: 20, label: \"棕\" },\n    { event: () => appendToSearch(\"4\"), span: 20, label: \"4\" },\n    { event: () => appendToSearch(\"5\"), span: 20, label: \"5\" },\n    { event: () => appendToSearch(\"6\"), span: 20, label: \"6\" },\n    { event: () => appendToSearch(\"橘\"), span: 20, label: \"橘\" },\n    { event: () => appendToSearch(\"小\"), span: 20, label: \"小\" },\n    { event: () => appendToSearch(\"7\"), span: 20, label: \"7\" },\n    { event: () => appendToSearch(\"8\"), span: 20, label: \"8\" },\n    { event: () => appendToSearch(\"9\"), span: 20, label: \"9\" },\n    { event: () => appendToSearch(\"幹線\"), span: 20, label: \"幹線\" },\n    { event: () => appendToSearch(\"more\"), span: 20, label: \"更多\" },\n    { event: () => appendToSearch(0), span: 20, label: \"C\" },\n    { event: () => appendToSearch(\"0\"), span: 20, label: \"0\" },\n    { event: () => setSearch(search.slice(0, -1)), span: 20, label: \"Clear\" },\n  ];\n\n  const { apiAdapter, isLoading, data } = useApiAdapter([]);\n\n  useEffect(() => {\n    apiAdapter({\n      api: axios.get(\n        `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/${\n          city.value\n        }/${encodeURIComponent(search)}`\n      ),\n      mapper: ({ data }) =>\n        data.map(\n          ({\n            DepartureStopNameZh,\n            DestinationStopNameZh,\n            RouteName: { Zh_tw },\n          }) => ({\n            title: Zh_tw,\n            desc: `${DepartureStopNameZh} 往 ${DestinationStopNameZh}`,\n            onClick: () =>\n              history.push({\n                pathname: \"/bus-stop-info\",\n                search: `city=${city.value}&route=${Zh_tw}`,\n              }),\n          })\n        ),\n    });\n  }, [search, city.value, apiAdapter, history]);\n\n  return (\n    <FlexBox row>\n      <FlexBox>\n        <FlexBox row>\n          Icon\n          <Input value={search} onChange={(e) => setSearch(e.target.value)} />\n        </FlexBox>\n        <GridRow row>\n          {showCitySelector\n            ? cityList.map(({ value, label }) => (\n                <GridCol key={value} span={20}>\n                  <Button\n                    onClick={() => {\n                      setCity({ value, label });\n                      setShowCitySelector(false);\n                    }}\n                  >\n                    {label}\n                  </Button>\n                </GridCol>\n              ))\n            : keyboardItems.map(({ span, label, event }, id) => (\n                <GridCol key={id} span={span}>\n                  <Button onClick={event}>{label}</Button>\n                </GridCol>\n              ))}\n        </GridRow>\n      </FlexBox>\n      <FlexBox>\n        <Spin spinning={isLoading}>\n          {city.label}\n          <CommonList dataSource={data} />\n          <List bordered dataSource={data} />\n        </Spin>\n      </FlexBox>\n    </FlexBox>\n  );\n}\n\nSearchBusPage.propTypes = {};\n\nexport default SearchBusPage;\n","import React, { useEffect, useMemo } from \"react\";\n// import PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport { useHistory } from \"react-router\";\nimport useApiAdapter from \"../hooks/useApiAdapter\";\nimport axios from \"axios\";\nimport CommonList from \"../components/commonList/CommonList\";\nimport cityList from \"../constant/cityList\";\n\nfunction StationNearby(props) {\n  const history = useHistory();\n  const { apiAdapter: getNearbyStations, isLoading: gettingNBStations } =\n    useApiAdapter();\n  const { apiAdapter: getPTBus, isLoading } = useApiAdapter();\n  const { lat, long } = queryString.parse(history.location.search);\n  const dataSource = useMemo(() => [], []);\n\n  useEffect(() => {\n    getNearbyStations({\n      api: axios.get(\n        `https://ptx.transportdata.tw/MOTC/v2/Bus/Station/NearBy?$spatialFilter=nearby(${lat},${long},500)`\n      ),\n      mapper: (resp) =>\n        resp.data.map(({ StationName, StationID, LocationCityCode }) => ({\n          title: StationName.Zh_tw,\n          stationId: StationID,\n          cityCode: LocationCityCode,\n        })),\n      onSuccess: (stations) => {\n        stations.forEach(({ title, stationId, cityCode }) => {\n          const city = cityList.find((item) => item.code === cityCode).value;\n          getPTBus({\n            api: axios.get(\n              `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/${city}/PassThrough/Station/${stationId}`\n            ),\n            onSuccess: (routes) => {\n              console.log(\"data\", routes);\n              dataSource.push({\n                title,\n                desc: routes.map((route) => route.RouteName.Zh_tw).join(\", \"),\n                onClick: () =>\n                  history.push({\n                    pathname: \"/station-bus-list\",\n                    search: `city=${city}&stationId=${stationId}`,\n                  }),\n              });\n            },\n          });\n        });\n      },\n    });\n  }, [getNearbyStations, lat, long, dataSource, getPTBus, history]);\n\n  return <CommonList dataSource={dataSource} />;\n}\n\nStationNearby.propTypes = {};\n\nexport default StationNearby;\n","import React, { useEffect, useMemo } from \"react\";\n// import PropTypes from \"prop-types\";\nimport queryString from \"query-string\";\nimport { useHistory } from \"react-router\";\nimport useApiAdapter from \"../hooks/useApiAdapter\";\nimport axios from \"axios\";\nimport CommonList from \"../components/commonList/CommonList\";\n\nfunction StationBusList(props) {\n  const history = useHistory();\n  const { apiAdapter: getPTBus, isLoading, data } = useApiAdapter();\n  const { city, stationId } = queryString.parse(history.location.search);\n\n  useEffect(() => {\n    getPTBus({\n      api: axios.get(\n        `https://ptx.transportdata.tw/MOTC/v2/Bus/Route/City/${city}/PassThrough/Station/${stationId}`\n      ),\n      mapper: (resp) => {\n        console.log(\"data\", resp.data);\n        return resp.data.map(\n          ({ RouteName: { Zh_tw }, DestinationStopNameZh }) => ({\n            title: Zh_tw,\n            desc: `往 ${DestinationStopNameZh}`,\n            onClick: () =>\n              history.push({\n                pathname: \"/bus-stop-info\",\n                search: `city=${city}&route=${Zh_tw}`,\n              }),\n          })\n        );\n      },\n    });\n  }, [getPTBus, city, stationId, history]);\n\n  return <CommonList dataSource={data} />;\n}\n\nStationBusList.propTypes = {};\n\nexport default StationBusList;\n","import axios from \"axios\";\nimport jsSHA from \"jssha\";\n\nexport default function initAxios() {\n  axios.interceptors.request.use(function (config) {\n    var AppID = \"ab90c39442fe4cf5b7e7707057a5dd23\";\n    var AppKey = \"MqcHWHmbsyYHjqeJx8ALvBJHF_I\";\n\n    var GMTString = new Date().toGMTString();\n    var ShaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n    ShaObj.setHMACKey(AppKey, \"TEXT\");\n    ShaObj.update(\"x-date: \" + GMTString);\n    var HMAC = ShaObj.getHMAC(\"B64\");\n    var Authorization =\n      'hmac username=\"' +\n      AppID +\n      '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' +\n      HMAC +\n      '\"';\n    config.headers.Authorization = Authorization;\n    config.headers[\"X-Date\"] = GMTString;\n\n    return config;\n  });\n}\n","import { useEffect } from \"react\";\nimport { Route, Switch, HashRouter, Redirect } from \"react-router-dom\";\nimport Home from \"./home/Home\";\nimport BusStopInfo from \"./busStopInfo/BusStopInfo\";\nimport SearchBusPage from \"./searchBusPage/SearchBusPage\";\nimport StationNearby from \"./stationNearby/StationNearby\";\nimport StationBusList from \"./stationBusList/StationBusList\";\nimport initAxios from \"./utils/initAxios\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const Router = () => {\n    return (\n      <Switch>\n        <Route path={`/home`} component={Home} />\n        <Route path={`/search-bus`} component={SearchBusPage} />\n        <Route path={`/bus-stop-info`} component={BusStopInfo} />\n        <Route path={`/nearby-stations`} component={StationNearby} />\n        <Route path={`/station-bus-list`} component={StationBusList} />\n        <Redirect to={`/home`} />\n      </Switch>\n    );\n  };\n\n  useEffect(() => {\n    initAxios();\n  }, []);\n\n  initAxios();\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Router />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}