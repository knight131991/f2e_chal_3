{"version":3,"sources":["logo.svg","Test.jsx","App.js","reportWebVitals.js","index.js"],"names":["Test","props","history","useHistory","onClick","push","App","className","path","render","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+LAAe,G,MAAA,IAA0B,kC,4CCgB1BA,MAXf,SAAcC,GACZ,IAAMC,EAAUC,cAChB,OACE,8BACE,cAAC,IAAD,CAAQC,QAAS,kBAAMF,EAAQG,KAAK,UAApC,qBCmFSC,MA9Ef,WAEE,OADgBH,cAEd,sBAAKI,UAAU,MAAf,UAgDE,eAAC,IAAD,WAEE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,OAAQ,kBAAM,0CAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAQ,kBAAM,gDAGlC,yBAAQF,UAAU,aAAlB,UACE,cAAC,IAAD,mBACA,qBAAKG,IAAKC,EAAMJ,UAAU,WAAWK,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEL,UAAU,WACVM,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,gCCnEOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.931348dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { Button } from \"antd\";\n\nfunction Test(props) {\n  const history = useHistory();\n  return (\n    <div>\n      <Button onClick={() => history.push(\"/test\")}>test</Button>\n    </div>\n  );\n}\n\nTest.propTypes = {};\n\nexport default Test;\n","import logo from \"./logo.svg\";\nimport { Button } from \"antd\";\nimport styled from \"styled-components\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n// import GMapReact from \"google-map-react\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport Test from \"./Test\";\n\n// const MyButton = styled.\n\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nfunction App() {\n  const history = useHistory();\n  return (\n    <div className=\"App\">\n      {/* <div style={{ height: \"100vh\", width: \"100%\" }}>\n        <GMapReact\n          yesIWantToUseGoogleMapApiInternals\n          bootstrapURLKeys={{ key: \"AIzaSyCnBX045s9vhUBtjDAGmdKlHAKIP42ljOI\" }}\n          defaultCenter={{\n            lat: 59.95,\n            lng: 30.33,\n          }}\n          defaultZoom={11}\n          onGoogleApiLoaded={({ map, maps }) => {\n            console.log(\"rererer\");\n            var flightPath = new maps.Polyline({\n              path: [\n                { lat: 53.480759, lng: -2.242631 },\n                { lat: 51.507351, lng: -0.127758 },\n                { lat: 55.953252, lng: -3.188267 },\n              ],\n              geodesic: true,\n              strokeColor: \"#33BD4E\",\n              strokeOpacity: 1,\n              strokeWeight: 50,\n            });\n            flightPath.setMap(map);\n\n            let directionsService = new maps.DirectionsService();\n            var directionsDisplay = new maps.DirectionsRenderer();\n            directionsDisplay.setMap(map);\n\n            directionsService.route(\n              {\n                travelMode: \"DRIVING\",\n                origin: \"austin, texas\",\n                destination: \"houston, texas\",\n              },\n              (DirectionsResult, DirectionsStatus) => {\n                console.log(\"DirectionsResult\", DirectionsResult);\n                console.log(\"DirectionsStatus\", DirectionsStatus);\n                if (DirectionsStatus == \"OK\") {\n                  directionsDisplay.setDirections(DirectionsResult);\n                }\n              }\n            );\n          }}\n        >\n          <AnyReactComponent lat={59.955413} lng={30.337844} text=\"My Marker\" />\n        </GMapReact>\n      </div> */}\n      <BrowserRouter>\n        {/* <Button onClick={() => history.push(\"/test\")}>tt</Button> */}\n        <Test />\n        <Switch>\n          <Route path=\"/test\" render={() => <div>Test</div>} />\n          <Route path=\"/\" render={() => <div>Home</div>} />\n        </Switch>\n      </BrowserRouter>\n      <header className=\"App-header\">\n        <Button>test</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}